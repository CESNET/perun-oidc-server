# configure OIDC scopes, its claims, its json structure and map them to perun attributes.
# if claim value begins with urn:perun: it will be considered as attribute name and will be replaced
# with real user attribute value. Otherwise it is considered as constant value.

# format is:
# scope_name = {
#   "claim_name": "attribute_name",
#   "claim_name": "constant_value",
#   "claim_name": {
#       "key": "attribute_name",
#       "key": { ... }
#   }
#}



##### standard OIDC scopes #####

openid = {\
        "sub": "urn:perun:user:attribute-def:core:id"\
  }

profile = {\
        "name": "urn:perun:user:attribute-def:core:displayName",\
        "given_name": "urn:perun:user:attribute-def:core:firstName",\
        "family_name": "urn:perun:user:attribute-def:core:lastName",\
        "middle_name": "urn:perun:user:attribute-def:core:middleName",\
        "preferred_username": "urn:perun:user:attribute-def:def:preferredMail"\
  }

email = {\
        "email": "urn:perun:user:attribute-def:def:preferredMail"\
  }

phone = {\
        "phone": "urn:perun:user:attribute-def:def:phone"\
  }

address = {\
        "address": {\
                "formatted": "urn:perun:user:attribute-def:def:address"\
        }\
  }
